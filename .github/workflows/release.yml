name: Release Please
on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - id: release
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: node
          package-name: cdk-skill-management

  build:
    if: needs.release.outputs.release_created
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: actions/configure-pages@v3

      - name: Install
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Build
        run: npm run build
      - name: Test
        run: npm test
      - name: Package
        run: npm run package
      - name: Documentation
        run: npm run docs

  publish-artifacts:
    if: needs.release.outputs.release_created
    runs-on: ubuntu-latest
    needs: [release, build]
    steps:
      - name: Publish NPM
        run: npm publish dist/jsii/js/*.tgz
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - if: ${{ steps.release.outputs.release_created }}
        name: Publish PyPI
        run: |
          pip install twine
          twine upload dist/jsii/python/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_AUTH_TOKEN }}
      - name: Add artifacts to the release
        run: |
          gh release upload ${{ steps.release.outputs.tag_name}} dist/jsii/js/*.tgz
          gh release upload ${{ steps.release.outputs.tag_name}} dist/jsii/python/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-documentation:
    if: needs.release.outputs.release_created
    runs-on: ubuntu-latest
    needs: [release, build]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Build pages
        uses: actions/jekyll-build-pages@v1
        with:
          destination: './docs'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish documentation
        uses: actions/upload-pages-artifact@v2
        with:
          path: './docs'
      - name: Deploy documentation
        id: deployment
        uses: actions/deploy-pages@v2
