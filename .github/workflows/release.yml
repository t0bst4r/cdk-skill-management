name: Release
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      - run: npm ci
      - run: npm run lint
      - run: npm run build
      - run: npm run test
      - uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: |
            dist/
            .jsii
            tsconfig.json

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: actions/download-artifact@v3
        with:
          name: build-output
      - run: npm ci
      - run: npm run release
      - run: npm run package
      - run: npm run documentation
      - uses: actions/upload-artifact@v3
        with:
          name: release-output-js
          path: dist/jsii/js
          retention-days: 1
      - uses: actions/upload-artifact@v3
        with:
          name: release-output-py
          path: dist/jsii/python
          retention-days: 1
      - uses: actions/upload-pages-artifact@v1
        with:
          path: './docs'

  publish-npm:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: release-output-js
          path: dist
      - run: npm publish ./*
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

  publish-pypi:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: release-output-py
      - name: Publish PyPI
        run: |
          pip install twine
          twine upload ./*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_AUTH_TOKEN }}

  publish-documentation:
    runs-on: ubuntu-latest
    needs: release
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Publish documentation
        id: deployment
        uses: actions/deploy-pages@v2
